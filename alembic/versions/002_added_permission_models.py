"""added permission models

Revision ID: 002
Revises: 001
Create Date: 2025-10-04 10:37:57.542826

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "002"
down_revision: Union[str, None] = "001"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    permissions_table = op.create_table(
        "permissions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("_deleted", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_permissions")),
    )
    op.create_table(
        "users_permissions",
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("_deleted", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"], ["permissions.id"], name=op.f("fk_users_permissions_permission_id_permissions")
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name=op.f("fk_users_permissions_user_id_users")),
        sa.PrimaryKeyConstraint("permission_id", "user_id", name=op.f("pk_users_permissions")),
    )

    op.bulk_insert(
        permissions_table,
        [
            # admin permissions
            {"action": "admin.create", "name": "Assign admin role"},
            {"action": "admin.read", "name": "View admin profile"},
            {"action": "admin.delete", "name": "Remove admin role"},
            {"action": "admin.update", "name": "Update admin profile"},
            # permission permissions
            {"action": "permissions.create", "name": "Create permissions"},
            {"action": "permissions.read", "name": "Read permissions"},
            {"action": "permissions.delete", "name": "Delete permissions"},
            {"action": "permissions.update", "name": "Update permissions"},
            # memberships permissions
            {"action": "memberships.create", "name": "Create memberships"},
            {"action": "memberships.read", "name": "Read memberships"},
            {"action": "memberships.delete", "name": "Delete memberships"},
            {"action": "memberships.update", "name": "Update memberships"},
            # user memberships permissions
            {"action": "user_memberships.create", "name": "Create users memberships"},
            {"action": "user_memberships.read", "name": "Read users memberships"},
            {"action": "user_memberships.delete", "name": "Delete users memberships"},
            {"action": "user_memberships.update", "name": "Update users memberships"},
        ],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users_permissions")
    op.drop_table("permissions")
    # ### end Alembic commands ###
